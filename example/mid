.data
	_var	2

.prog

	;test
	addc	r0	r31	4
	addc	r1	r31	5
	addc	r2	r31	6
	addc	r3	r31	7
	addc	r4	r31	8
	ld		r5	r31	_var	;for loop start
	nop						;nop
	nop						;nop
	nop						;nop
	nop						;nop
:a
	subc	r5	r5	1		; 1 0
	add		r1	r1	r0		; 9
	sub		r4	r4	r1		; -1
	;nop						;nop
	;nop						;nop
	;nop						;nop
	and		r1	r1	r0		; 0
	or		r0	r0	r1		; 4
	add		r2	r2	r3		; d
	;nop						;nop
	;nop						;nop
	;nop						;nop
	;nop						;nop
	xor		r2	r2	r2		; 0
	xnor	r1	r1	r1		; -1
	;nop						;nop
	;nop						;nop
	;nop						;nop
	;nop						;nop
	shlc	r1	r1	4		; big number
	;nop						;nop
	;nop						;nop
	;nop						;nop
	;nop						;nop
	shr		r1	r1	r3		; smaller big number
	;nop						;nop
	;nop						;nop
	;nop						;nop
	;nop						;nop
	bne		r7	r5	:a		;for loop end

[
	addc	r0	r31	2
	addc	r1	r31	3
	addc	r2	r31	4
	addc	r3	r31	4
	addc	r4	r31	4
	addc	r5	r31	4
	addc	r6	r31	4
	add		r1	r0	r1
]
